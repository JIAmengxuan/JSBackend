<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ie.tcd.ase.dao.RatingMapper" >
  <resultMap id="BaseResultMap" type="ie.tcd.ase.entity.Rating" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="DATE" />
    <result column="update_date" property="updateDate" jdbcType="DATE" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="total_trips" property="totalTrips" jdbcType="INTEGER" />
    <result column="total_ratings" property="totalRatings" jdbcType="INTEGER" />
    <result column="average_rating" property="averageRating" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_date, update_date, create_by, update_by, user_id, total_trips, total_ratings, 
    average_rating
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="ie.tcd.ase.entity.RatingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rating
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from rating
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from rating
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="ie.tcd.ase.entity.RatingExample" >
    delete from rating
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ie.tcd.ase.entity.Rating" >
    insert into rating (id, create_date, update_date, 
      create_by, update_by, user_id, 
      total_trips, total_ratings, average_rating
      )
    values (#{id,jdbcType=INTEGER}, #{createDate,jdbcType=DATE}, #{updateDate,jdbcType=DATE}, 
      #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{totalTrips,jdbcType=INTEGER}, #{totalRatings,jdbcType=INTEGER}, #{averageRating,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="ie.tcd.ase.entity.Rating" >
    insert into rating
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="totalTrips != null" >
        total_trips,
      </if>
      <if test="totalRatings != null" >
        total_ratings,
      </if>
      <if test="averageRating != null" >
        average_rating,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=DATE},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=DATE},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="totalTrips != null" >
        #{totalTrips,jdbcType=INTEGER},
      </if>
      <if test="totalRatings != null" >
        #{totalRatings,jdbcType=INTEGER},
      </if>
      <if test="averageRating != null" >
        #{averageRating,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ie.tcd.ase.entity.RatingExample" resultType="java.lang.Integer" >
    select count(*) from rating
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update rating
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=DATE},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=DATE},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.totalTrips != null" >
        total_trips = #{record.totalTrips,jdbcType=INTEGER},
      </if>
      <if test="record.totalRatings != null" >
        total_ratings = #{record.totalRatings,jdbcType=INTEGER},
      </if>
      <if test="record.averageRating != null" >
        average_rating = #{record.averageRating,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update rating
    set id = #{record.id,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=DATE},
      update_date = #{record.updateDate,jdbcType=DATE},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      total_trips = #{record.totalTrips,jdbcType=INTEGER},
      total_ratings = #{record.totalRatings,jdbcType=INTEGER},
      average_rating = #{record.averageRating,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ie.tcd.ase.entity.Rating" >
    update rating
    <set >
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=DATE},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=DATE},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="totalTrips != null" >
        total_trips = #{totalTrips,jdbcType=INTEGER},
      </if>
      <if test="totalRatings != null" >
        total_ratings = #{totalRatings,jdbcType=INTEGER},
      </if>
      <if test="averageRating != null" >
        average_rating = #{averageRating,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ie.tcd.ase.entity.Rating" >
    update rating
    set create_date = #{createDate,jdbcType=DATE},
      update_date = #{updateDate,jdbcType=DATE},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      total_trips = #{totalTrips,jdbcType=INTEGER},
      total_ratings = #{totalRatings,jdbcType=INTEGER},
      average_rating = #{averageRating,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>